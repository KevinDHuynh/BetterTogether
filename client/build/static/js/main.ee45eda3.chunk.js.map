{"version":3,"sources":["reducers/itemReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","actions/types.js","store.js","actions/errorActions.js","actions/authActions.js","actions/itemActions.js","components/HabitList.js","components/ItemModal.js","components/auth/RegisterModal.js","components/auth/Logout.js","components/auth/LoginModal.js","components/AppNavBar.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","loading","msg","status","id","token","localStorage","getItem","isAuthenticated","isLoading","user","combineReducers","item","state","action","type","payload","filter","_id","error","auth","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","returnErrors","clearErrors","tokenConfig","getState","config","headers","setItemsLoading","HabitList","onDeleteClick","props","deleteItem","prevProps","this","getItems","Container","Grid","container","direction","spacing","style","marginTop","map","description","title","predicted_longterm_benefit","perceived_benefit","estimated_difficulty","Card","CardContent","Typography","color","gutterBottom","variant","component","CardActions","IconButton","aria-label","fontSize","onClick","bind","Component","connect","dispatch","axios","get","then","res","data","catch","err","response","delete","ItemModal","dialog","estimated_time","types","value","label","difficulty","time","toggle","setState","onChange","e","target","name","onSubmit","preventDefault","newItem","addItem","Button","margin","Dialog","aria-labelledby","open","DialogTitle","List","ListItem","TextField","select","fullWidth","option","MenuItem","key","Slider","defaultValue","valueLabelDisplay","step","marks","min","max","DialogActions","post","RegisterModal","username","password","newUser","register","error_msg","Alert","severity","body","JSON","stringify","Logout","logout","href","LoginModal","login","useStyles","createStyles","theme","root","flexGrow","menuButton","marginRight","AppNavBar","isOpen","classes","authLinks","className","guestLinks","AppBar","position","Toolbar","Link","withStyles","createMuiTheme","palette","primary","main","secondary","themeName","App","useEffect","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ee45eda3.chunk.js","sourcesContent":["import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from '../actions/types';\r\n\r\nconst initialState = {\r\n    items: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                loading: false\r\n            };\r\n        case DELETE_ITEM:\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(item => item._id !== action.payload)\r\n            };\r\n        case ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                items: [action.payload, ...state.items]\r\n            }\r\n        case ITEMS_LOADING:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types'\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n    id: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_ERRORS:\r\n            return{\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                status: null,\r\n                id: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            };\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport itemReducer from './itemReducer';\r\nimport errorReducer from './errorReducer';\r\nimport authReducer from './authReducer.js';\r\n\r\nexport default combineReducers({\r\n    item: itemReducer,\r\n    error: errorReducer,\r\n    auth:  authReducer\r\n});","//item reducer\r\nexport const GET_ITEMS = 'GET_ITEMS';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\r\n//auth reducer\r\nexport const USER_LOADING = 'USER_LOADING';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const REGISTER_SUCCESS= 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\n//error reducer\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';","import { createStore, applyMiddleware, compose} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(\r\n    applyMiddleware(...middleware),\r\n));\r\n\r\nexport default store;","import { GET_ERRORS, CLEAR_ERRORS} from './types';\r\n\r\n// RETURN ERRORS\r\nexport const returnErrors = (msg, status, id = null) => {\r\n    return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id }\r\n    };\r\n};\r\n\r\n// CLEAR ERRORS\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    };\r\n};","import axios from 'axios';\r\nimport { returnErrors} from './errorActions'\r\nimport {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n} from \"../actions/types\";\r\n\r\n\r\n// Register\r\nexport const register = ({ name, username, password}) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    //Request body\r\n    const body = JSON.stringify({ name, username, password });\r\n\r\n    axios.post('/api/register', body, config)\r\n        .then(res => dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\r\n            dispatch({\r\n                type: REGISTER_FAIL\r\n            });\r\n        });\r\n};\r\n\r\n// Login user\r\nexport const login = ({ username, password }) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    //Request body\r\n    const body = JSON.stringify({ username, password });\r\n\r\n    axios.post('/api/login/', body, config)\r\n        .then(res => dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'));\r\n            dispatch({\r\n                type: LOGIN_FAIL\r\n            });\r\n        });\r\n};\r\n\r\n\r\n// Logout User\r\nexport const logout = () => {\r\n    return {\r\n        type: LOGOUT_SUCCESS\r\n    };\r\n};\r\n\r\n// Check token, load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    // User loading \r\n    dispatch({ type: USER_LOADING });\r\n\r\n    axios.get('/api/login/user', tokenConfig(getState))\r\n        .then( res => dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n            });\r\n        });\r\n\r\n};\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n\r\n        //Get token from local storage\r\n        const token = getState().auth.token;\r\n\r\n        // Headers\r\n        const config = {\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        }\r\n    \r\n        // Check token\r\n        if (token) {\r\n            config.headers['x-auth-token'] = token;\r\n        }\r\n\r\n        return config;\r\n}","import axios from 'axios';\r\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING} from './types';\r\nimport { tokenConfig } from './authActions';\r\nimport { returnErrors } from './errorActions';\r\n\r\nexport const getItems = () => (dispatch, getState) => {\r\n    dispatch(setItemsLoading());\r\n    axios\r\n        .get('/api/habit_recorders', tokenConfig(getState))\r\n        .then(res => \r\n            dispatch({\r\n                type: GET_ITEMS,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status))\r\n        );\r\n};\r\n\r\nexport const addItem = item => (dispatch, getState) => {\r\n    axios\r\n        .post('/api/habit_recorders', item, tokenConfig(getState))\r\n        .then(res =>\r\n            dispatch({\r\n                type: ADD_ITEM,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status))\r\n        );\r\n};\r\n\r\n\r\nexport const deleteItem = id => (dispatch, getState) => {\r\n    axios\r\n        .delete(`/api/habit_recorders/${id}`, tokenConfig(getState))\r\n        .then(res => \r\n            dispatch({\r\n                type: DELETE_ITEM,\r\n                payload: id\r\n            })\r\n        )\r\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status))\r\n        );\r\n};\r\n\r\n\r\nexport const setItemsLoading = () => {\r\n    return {\r\n        type: ITEMS_LOADING\r\n    };\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport { Container, IconButton, Card, CardActions, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { connect } from 'react-redux';\r\nimport { getItems, deleteItem } from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass HabitList extends Component{\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.isAuthenticated !== prevProps.isAuthenticated) {\r\n            this.props.getItems();\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getItems();\r\n    }\r\n\r\n\r\n\r\n    onDeleteClick = (id) => {\r\n        this.props.deleteItem(id);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { items } = this.props.item;\r\n        return (\r\n            <Container>\r\n                <Grid container direction=\"row\" spacing={2} style={{marginTop: '1em'}}>\r\n                    {items.map(({ _id,description,predicted_longterm_benefit,perceived_benefit,estimated_difficulty,title,type}) => (\r\n                        <Grid item>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography color=\"textSecondary\" gutterBottom>\r\n                                    {title}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                    {description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <IconButton \r\n                                        aria-label = \"delete\" \r\n                                        fontSize = \"small\" \r\n                                        color = \"secondary\"  \r\n                                        onClick = {this.onDeleteClick.bind(this, _id)}\r\n                                    >\r\n                                        <DeleteIcon/>\r\n                                    </IconButton>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                \r\n            </Container>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nHabitList.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    item: state.item,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    { getItems, deleteItem }\r\n    )(HabitList);","import React, { Component } from 'react';\r\nimport {Dialog, TextField, Button, DialogTitle,DialogActions, List, ListItem, MenuItem, Slider, Typography} from '@material-ui/core/';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../actions/itemActions';\r\n\r\nclass ItemModal extends Component{\r\n    state = {\r\n        dialog: false,\r\n        title: '',\r\n        type:'',\r\n        description: '',\r\n        predicted_longterm_benefit:'',\r\n        estimated_difficulty:'',\r\n        estimated_time:'',\r\n    }\r\n    \r\n    types = [\r\n        {\r\n          value: 'PHYSICAL',\r\n          label: 'Physical',\r\n        },\r\n        {\r\n          value: 'SLEEP',\r\n          label: 'Sleep',\r\n        },\r\n        {\r\n          value: 'CREATIVE',\r\n          label: 'Creative',\r\n        },\r\n        {\r\n          value: 'PLEASURE',\r\n          label: 'Pleasure',\r\n        },\r\n      ];\r\n\r\n    difficulty = [\r\n        {\r\n            value: 'VERY_EASY',\r\n            label: 'Very Easy'\r\n        },\r\n        {\r\n            value: 'EASY',\r\n            label: 'Easy'\r\n        },\r\n        {\r\n            value: 'MEDIUM',\r\n            label: 'Medium'\r\n        },\r\n        {\r\n            value: 'HARD',\r\n            label: 'Hard'\r\n        },\r\n        {\r\n            value: 'VERY_HARD',\r\n            label: 'Very Hard'\r\n        },\r\n    ];\r\n\r\n    time = [\r\n        {\r\n          value: 'LESS_THAN_A_WEEK',\r\n          label: '<1 Week',\r\n        },\r\n        {\r\n            value: 'ONE_WEEK',\r\n            label: '1 Week',\r\n        },\r\n        {\r\n            value: 'TWO_WEEKS',\r\n            label: '2 Weeks',\r\n        },\r\n        {\r\n            value: 'THREE_WEEKS',\r\n            label: '3 Weeks',\r\n        },\r\n        {\r\n            value: 'ONE_MONTH',\r\n            label: '1 Month',\r\n        },\r\n        {\r\n            value: 'EIGHT_WEEKS',\r\n            label: '2 Months',\r\n        },\r\n        {\r\n            value: 'TWELVE_WEEKS',\r\n            label: '3 Months',\r\n        },\r\n        {\r\n            value: 'TWENTYONE_WEEKS',\r\n            label: '6 Months',\r\n        },\r\n        {\r\n            value: 'ONE_YEAR',\r\n            label: '1 Year',\r\n        },\r\n        {\r\n            value: 'TWO_YEARS',\r\n            label: '2 Years',\r\n        },\r\n        {\r\n            value: 'FIVE_YEARS',\r\n            label: '5 Years',\r\n        },\r\n        {\r\n            value: 'TEN_YEARS',\r\n            label: '10 Years',\r\n        },\r\n        {\r\n            value: 'GREATER_THAN_TEN_YEARS',\r\n            label: '>10 Years',\r\n        },\r\n      ];\r\n    \r\n    toggle = () => {\r\n        this.setState({\r\n            dialog: !this.state.dialog\r\n        });\r\n    }\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newItem = {\r\n            title: this.state.title,\r\n            type: this.state.type,\r\n            description: this.state.description,\r\n            predicted_longterm_benefit: this.state.predicted_longterm_benefit,\r\n            estimated_difficulty: this.state.estimated_difficulty,\r\n            estimated_time: this.state.estimated_time\r\n        }\r\n\r\n        this.props.addItem(newItem);\r\n\r\n        this.toggle();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.toggle} style={{margin: '2em'}} >\r\n                    Add Habit\r\n                </Button>\r\n\r\n                <Dialog\r\n                aria-labelledby=\"new-habit-dialog\"\r\n                open={this.state.dialog}\r\n                >\r\n                    <DialogTitle id=\"new-habit-dialog\">Create New Habit</DialogTitle>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <List>\r\n                            <ListItem>\r\n                                <TextField label=\"Name of Habit\" name=\"title\" margin=\"dense\" onChange={this.onChange}/>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <TextField label=\"Brief Description\" name=\"description\" margin=\"dense\" onChange={this.onChange}/>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <TextField select variant=\"standard\" fullWidth=\"True\" label=\"Type of Habit\" name=\"type\" margin=\"dense\" onChange={this.onChange}>\r\n                                {this.types.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                                </TextField>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                {/* Predicted Longterm Benefit*/}\r\n                                <Typography id=\"discrete-slider\" gutterBottom>\r\n                                    Predicted Longterm Benefit\r\n                                </Typography>\r\n                                <Slider\r\n                                    name=\"predicted_longterm_benefit\"\r\n                                    defaultValue={5}\r\n                                    aria-labelledby=\"discrete-slider\"\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    step={1}\r\n                                    marks\r\n                                    min={1}\r\n                                    max={10}\r\n                                />\r\n                            </ListItem>\r\n                            <ListItem>\r\n\r\n                                {/* Estimated Difficulty*/}\r\n\r\n                                <TextField select variant=\"standard\" fullWidth=\"True\" label=\"Estimated Difficulty\" name=\"estimated_difficulty\" margin=\"dense\" onChange={this.onChange}>\r\n                                {this.difficulty.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                                </TextField>\r\n\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                {/* Estimated Time */}\r\n\r\n                                <TextField select variant=\"standard\" fullWidth=\"True\" label=\"Estimated Time\" name=\"estimated_time\" margin=\"dense\" onChange={this.onChange}>\r\n                                {this.time.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                                </TextField>\r\n                            </ListItem>\r\n                        </List>\r\n                    </form>\r\n                    <DialogActions>\r\n                        <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n                        <Button color=\"primary\" onClick={this.onSubmit}>Add Item</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    item: state.item\r\n})\r\nexport default connect(mapStateToProps, { addItem })(ItemModal);","import React, { Component } from 'react';\r\nimport {Dialog, TextField, Button, DialogTitle,DialogActions, List, ListItem} from '@material-ui/core/';\r\nimport {Alert} from '@material-ui/lab';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { register } from '../../actions/authActions'\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\nclass RegisterModal extends Component{\r\n    state = {\r\n        dialog: false,\r\n        name: '',\r\n        username: '',\r\n        password: '',\r\n        msg: null\r\n    };\r\n    \r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        error: PropTypes.object.isRequired,\r\n        register: PropTypes.func.isRequired,\r\n        clearErrors: PropTypes.func.isRequired\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { error } = this.props;\r\n        if(error !== prevProps.error) {\r\n            //register error occurs\r\n            if(error.id === 'REGISTER_FAIL') {\r\n                this.setState({ msg: error.msg.error_msg});\r\n            } else {\r\n                this.setState({msg: null});\r\n            }\r\n        }\r\n        \r\n        if(this.state.dialog) {\r\n            if(this.props.isAuthenticated) {\r\n                this.toggle();\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        //Clear errors\r\n        this.props.clearErrors();\r\n        this.setState({\r\n            dialog: !this.state.dialog\r\n        });\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const { name, username, password } = this.state;\r\n\r\n        // User object\r\n        const newUser = {\r\n            name,\r\n            username,\r\n            password\r\n        };\r\n\r\n        this.props.register(newUser);\r\n\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" onClick={this.toggle} color=\"secondary\">\r\n                    Register\r\n                </Button>\r\n\r\n                <Dialog\r\n                aria-labelledby=\"new-habit-dialog\"\r\n                open={this.state.dialog}\r\n                >\r\n                    <DialogTitle id=\"new-habit-dialog\">Create New Account</DialogTitle>\r\n                    { this.state.msg ? (\r\n                            <Alert severity=\"error\">{ this.state.msg }</Alert>\r\n                        ) : null}\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <List>\r\n                            <ListItem>\r\n                                <TextField label=\"Full Name\" name=\"name\" margin=\"dense\" onChange={this.onChange}/>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <TextField label=\"Username\" name=\"username\" margin=\"dense\" onChange={this.onChange}/>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <TextField label=\"Password\" name=\"password\" margin=\"dense\" onChange={this.onChange}/>\r\n                            </ListItem>\r\n                        </List>\r\n                    </form>\r\n                    <DialogActions>\r\n                        <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n                        <Button color=\"primary\" onClick={this.onSubmit}>Register</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n});\r\n\r\nexport default connect(mapStateToProps,\r\n     { register, clearErrors }\r\n     )(RegisterModal);","import React, { Component, Fragment } from 'react';\r\nimport { Button } from '@material-ui/core'\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/authActions';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class Logout extends Component {\r\n\r\n    static propTypes = {\r\n        logout: PropTypes.func.isRequired\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Fragment>\r\n                    <Button variant=\"contained\" onClick={this.props.logout} href=\"#\" color=\"secondary\">\r\n                        Logout\r\n                    </Button>\r\n                </Fragment>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { logout })(Logout);","import React, { Component } from 'react';\r\nimport { Dialog, TextField, Button, DialogTitle,DialogActions, List, ListItem } from '@material-ui/core/';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/authActions'\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\nclass LoginModal extends Component{\r\n    state = {\r\n        dialog: false,\r\n        username: '',\r\n        password: '',\r\n        msg: null\r\n    };\r\n    \r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        error: PropTypes.object.isRequired,\r\n        login: PropTypes.func.isRequired,\r\n        clearErrors: PropTypes.func.isRequired\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { error } = this.props;\r\n        if(error !== prevProps.error) {\r\n            //login error occurs\r\n            if(error.id === 'LOGIN_FAIL') {\r\n                this.setState({ msg: error.msg.error_msg});\r\n            } else {\r\n                this.setState({msg: null});\r\n            }\r\n        }\r\n        \r\n        if(this.state.dialog) {\r\n            if(this.props.isAuthenticated) {\r\n                this.toggle();\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        //Clear errors\r\n        this.props.clearErrors();\r\n        this.setState({\r\n            dialog: !this.state.dialog\r\n        });\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        const { username, password } = this.state;\r\n\r\n        const user = {\r\n            username,\r\n            password\r\n        }\r\n\r\n        //attempt login\r\n        this.props.login(user);\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" onClick={this.toggle} color=\"secondary\">\r\n                    Login\r\n                </Button>\r\n\r\n                <Dialog\r\n                aria-labelledby=\"new-habit-dialog\"\r\n                open={this.state.dialog}\r\n                >\r\n                    <DialogTitle id=\"new-habit-dialog\">Login</DialogTitle>\r\n                    { this.state.msg ? (\r\n                            <Alert severity=\"error\">{ this.state.msg }</Alert>\r\n                        ) : null}\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <List>\r\n                            <ListItem>\r\n                                <TextField label=\"Username\" name=\"username\" margin=\"dense\" onChange={this.onChange}/>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <TextField label=\"Password\" name=\"password\" margin=\"dense\" onChange={this.onChange}/>\r\n                            </ListItem>\r\n                        </List>\r\n                    </form>\r\n                    <DialogActions>\r\n                        <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n                        <Button color=\"primary\" onClick={this.onSubmit}>Login</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n});\r\n\r\nexport default connect(mapStateToProps,\r\n     { login, clearErrors }\r\n     )(LoginModal);","import React, { Component, Fragment} from 'react';\r\nimport {AppBar, Toolbar, Typography, Link} from '@material-ui/core';\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport RegisterModal from './auth/RegisterModal';\r\nimport Logout from './auth/Logout'\r\nimport LoginModal from './auth/LoginModal';\r\n\r\n\r\nconst useStyles = createStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nclass AppNavBar extends Component {\r\n\r\n  state = {\r\n    isOpen: false\r\n  }\r\n\r\n  static propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n}\r\n\r\n  render() {\r\n    \r\n\r\n    const { classes } = this.props;\r\n\r\n    const { isAuthenticated, user } = this.props.auth;\r\n\r\n    const authLinks = (\r\n      <Fragment>\r\n        <Typography variant=\"h5\" className={classes.menuButton}>\r\n          <Logout />\r\n        </Typography>\r\n      </Fragment>\r\n    )\r\n\r\n    const guestLinks = (\r\n      <Fragment>\r\n        <Typography variant=\"h5\" className={classes.menuButton}>\r\n          <RegisterModal />\r\n        </Typography>\r\n        <Typography variant=\"h5\" className={classes.menuButton}>\r\n          <LoginModal />\r\n        </Typography>\r\n      </Fragment>\r\n    )\r\n    \r\n    return (\r\n      <div className={classes.root}>\r\n      <AppBar position=\"fixed\" style={{ margin: 0 }}>\r\n          <Toolbar>\r\n            <Typography variant=\"h5\" className={classes.title}>\r\n              <Link href=\"#cover\" color=\"inherit\" onClick={this.onSubmit}>\r\n                BetterTogether\r\n              </Link>\r\n            </Typography>\r\n            \r\n            { isAuthenticated ? authLinks : guestLinks}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(useStyles)(AppNavBar));","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#1B5E20' },\r\n  secondary: { main: '#F57F17' }\r\n};\r\nconst themeName = 'Parsley Ecstasy Albacore';\r\n\r\nexport default createMuiTheme({ palette, themeName });\r\n","import React, {useEffect, Fragment} from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport { loadUser } from './actions/authActions';\r\n\r\nimport { Container , ThemeProvider, CssBaseline} from '@material-ui/core/';\r\n\r\nimport HabitList from './components/HabitList';\r\nimport ItemModal from './components/ItemModal';\r\nimport AppNavBar from './components/AppNavBar';\r\nimport theme from './theme';\r\n\r\nimport './App.css';\r\n\r\nconst dashboard = (\r\n  <Fragment>\r\n    <HabitList />\r\n    <ItemModal />\r\n  </Fragment>\r\n)\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline></CssBaseline>\r\n        <div className=\"App\">\r\n          <AppNavBar />\r\n          <Container>\r\n\t\t\t<HabitList />\r\n\t\t\t<ItemModal />\r\n          </Container>\r\n        </div>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<BrowserRouter basename={'dashboard'}>\r\n    \t<App />\r\n\t</BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}